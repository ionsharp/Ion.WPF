<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Data="clr-namespace:Ion.Data">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{i:Style Key=Control}"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="Expander.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid i:XGrid.Columns="Auto,*"
                            Margin="{Data:Ancestor {x:Type Expander}, Path=(i:XExpander.HeaderPadding)}"
                            i:XPanel.VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <i:RotateElement
                                Rotate="{TemplateBinding IsChecked}"
                                Rotation="-90,0"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <i:ImageElement Foreground="{Data:Ancestor Foreground, {x:Type Expander}}" Source="{i:Image Key=ArrowDown}" SourceSize="12,12"/>
                            </i:RotateElement>
                            <ContentPresenter Grid.Column="1" 
                                ContentSource="Content" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Background" Value="{i:Theme ExpanderBackground}" />
        <Setter Property="BorderBrush" Value="{i:Theme ExpanderBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{i:Bind FontFamily, AppSource=Data}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="i:XExpander.HeaderPadding" Value="5,2,0,2"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="10,5,10,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid i:XGrid.AutoRows="True" i:XGrid.Rows="Auto,*">
                        <ToggleButton x:Name="ToggleButton"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            IsChecked="{i:Bind From=TemplatedParent, Path=IsExpanded, Mode=TwoWay}"
                            Padding="{i:Bind From=TemplatedParent, Path=(i:XExpander.HeaderPadding)}"
                            Style="{StaticResource Expander.ToggleButton}"
                            Visibility="{i:Bind From=TemplatedParent, Path=(i:XExpander.HeaderVisibility)}"/>
                        <Border x:Name="PART_Content" BorderBrush="#22000000" BorderThickness="1,0,1,1" Margin="12,0,0,0" Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Opacity="0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Visibility="Collapsed">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="0"
                                            Storyboard.TargetName="PART_Content" 
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="PART_Content" 
                                            Storyboard.TargetProperty="Opacity" 
                                            To="1"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="PART_Content"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="0:0:0.2"
                                            Storyboard.TargetName="PART_Content" 
                                            Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
</ResourceDictionary>