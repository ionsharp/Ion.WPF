<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Analysis="clr-namespace:Ion.Analysis;assembly=Ion"
    xmlns:Common="clr-namespace:Ion"
    xmlns:Data="clr-namespace:Ion.Data">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{i:Style Key=Button}"/>
        <ResourceDictionary Source="{i:Style Key=Control}"/>
        <ResourceDictionary Source="{i:Style Key=FrameworkElement}"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- /// -->

    <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="{x:Type HeaderedContentControl}" TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="i:XHeaderedContentControl.HorizontalHeaderAlignment" Value="Stretch"/>
        <Setter Property="i:XHeaderedContentControl.VerticalHeaderAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="PART_Row1" Height="Auto"/>
                                <RowDefinition x:Name="PART_Row2" Height="*"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter ContentSource="Header" x:Name="ContentPresenter0" i:XElement.Name="{x:Static i:XHeaderedContentControl.HeaderKey}"
                                HorizontalAlignment="{i:Bind From=TemplatedParent, Path=(i:XHeaderedContentControl.HorizontalHeaderAlignment)}"
                                Margin="{i:Bind From=TemplatedParent, Path=(i:XHeaderedContentControl.HeaderPadding)}"
                                VerticalAlignment="{i:Bind From=TemplatedParent, Path=(i:XHeaderedContentControl.VerticalHeaderAlignment)}"
                                Visibility="{i:Bind From=TemplatedParent, Path=(i:XHeaderedContentControl.HeaderVisibility)}"/>
                            <ContentPresenter ContentSource="Content" x:Name="ContentPresenter1" i:XElement.Name="{x:Static i:XHeaderedContentControl.ContentKey}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="i:XHeaderedContentControl.HeaderPlacement" Value="Top">
                            <Setter TargetName="ContentPresenter0" 
                                    Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentPresenter1" 
                                    Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Row1" 
                                    Property="Height" Value="Auto"/>
                            <Setter TargetName="PART_Row2" 
                                    Property="Height" Value="*"/>
                        </Trigger>
                        <Trigger Property="i:XHeaderedContentControl.HeaderPlacement" Value="Bottom">
                            <Setter TargetName="ContentPresenter0"
                                    Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentPresenter1" 
                                    Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Row1" 
                                    Property="Height" Value="*"/>
                            <Setter TargetName="PART_Row2" 
                                    Property="Height" Value="Auto"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type i:ContentControl3D}" TargetType="{x:Type i:ContentControl3D}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type i:ContentControl3D}">
                    <Border
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                        <Viewport3D x:Name="PART_Viewport">
                            <Viewport3D.Children>
                                <!-- ... LIGHT -->
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <Model3DGroup>
                                            <DirectionalLight Color="#444" Direction="0,0,-1" />
                                            <AmbientLight Color="#BBB" />
                                        </Model3DGroup>
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>

                                <!-- ... BACK -->
                                <Viewport2DVisual3D>
                                    <Viewport2DVisual3D.Geometry>
                                        <MeshGeometry3D
                                       TriangleIndices="0,1,2 2,3,0"
                                       TextureCoordinates="0,1 1,1 1,0 0,0"
                                       Positions="-1,-1,0 1,-1,0 1,1,0 -1,1,0"/>
                                    </Viewport2DVisual3D.Geometry>

                                    <Viewport2DVisual3D.Transform>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="180" />
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </Viewport2DVisual3D.Transform>

                                    <Viewport2DVisual3D.Material>
                                        <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White" />
                                    </Viewport2DVisual3D.Material>

                                    <Viewport2DVisual3D.Visual>
                                        <ContentPresenter
                                          Content="{TemplateBinding BackContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}"/>
                                    </Viewport2DVisual3D.Visual>
                                </Viewport2DVisual3D>

                                <!-- ... FRONT -->
                                <Viewport2DVisual3D>
                                    <Viewport2DVisual3D.Geometry>
                                        <MeshGeometry3D
                                         TriangleIndices="0,1,2 2,3,0"
                                         TextureCoordinates="0,1 1,1 1,0 0,0"
                                         Positions="-1,-1,0 1,-1,0 1,1,0 -1,1,0"/>
                                    </Viewport2DVisual3D.Geometry>

                                    <Viewport2DVisual3D.Transform>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="0"/>
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                    </Viewport2DVisual3D.Transform>

                                    <Viewport2DVisual3D.Material>
                                        <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White" />
                                    </Viewport2DVisual3D.Material>

                                    <Viewport2DVisual3D.Visual>
                                        <ContentPresenter
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                    </Viewport2DVisual3D.Visual>
                                </Viewport2DVisual3D>
                            </Viewport3D.Children>
                        </Viewport3D>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /// -->

    <DataTemplate x:Key="{x:Static i:ResultControl.IconTemplate}">
        <i:ImageElement Margin="0,0,8,0">
            <i:ImageElement.Style>
                <Style TargetType="{x:Type i:ImageElement}" BasedOn="{StaticResource {x:Type i:ImageElement}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{i:Bind Type}" Value="{x:Static Analysis:ResultType.Error}">
                            <Setter Property="Source" Value="{i:Image Key=XRound}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{i:Bind Type}" Value="{x:Static Analysis:ResultType.Message}">
                            <Setter Property="Source" Value="{i:Image Key=Message}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{i:Bind Type}" Value="{x:Static Analysis:ResultType.Success}">
                            <Setter Property="Source" Value="{i:Image Key=Success}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{i:Bind Type}" Value="{x:Static Analysis:ResultType.Warning}">
                            <Setter Property="Source" Value="{i:Image Key=Warning}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </i:ImageElement.Style>
        </i:ImageElement>
    </DataTemplate>
    
    <Style x:Key="{x:Type i:ResultControl}" TargetType="{x:Type i:ResultControl}" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Border.CornerRadius" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type Analysis:Result}">
                    <TextBlock i:XTextBlock.MarkUp="{i:Bind Text}" Foreground="#FFF" TextAlignment="Left"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="i:ImageElement.Foreground" Value="White"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type i:ResultControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        Padding="{TemplateBinding Padding}">
                        <Grid i:XGrid.AutoColumns="True" i:XGrid.Columns="Auto,*,Auto">
                            <ContentPresenter Content="{i:Bind Content, From=TemplatedParent}" 
                                ContentTemplate="{DynamicResource {x:Static i:ResultControl.IconTemplate}}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <i:Element Visibility="{i:Bind CloseCommand, From=TemplatedParent, Convert=Data:ConvertObjectToVisibility}">
                                <i:ImageButton
                                    Command="{TemplateBinding CloseCommand}"
                                    Margin="10,0,0,0"
                                    Source="{i:Image Key=XRound}"
                                    Visibility="{i:Bind IsEnabled, Convert=Data:ConvertBooleanToVisibility, From=Self}"/>
                            </i:Element>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{i:Bind Content.Type, From=Self}" Value="{x:Static Analysis:ResultType.Error}">
                <Setter Property="Background" Value="{DynamicResource Red}"/>
            </DataTrigger>
            <DataTrigger Binding="{i:Bind Content.Type, From=Self}" Value="{x:Static Analysis:ResultType.Message}">
                <Setter Property="Background" Value="{DynamicResource Blue}"/>
            </DataTrigger>
            <DataTrigger Binding="{i:Bind Content.Type, From=Self}" Value="{x:Static Analysis:ResultType.Success}">
                <Setter Property="Background" Value="{DynamicResource Green}"/>
            </DataTrigger>
            <DataTrigger Binding="{i:Bind Content.Type, From=Self}" Value="{x:Static Analysis:ResultType.Warning}">
                <Setter Property="Background" Value="{DynamicResource Orange}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type i:TransitionControl}" TargetType="{x:Type i:TransitionControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type i:TransitionControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <Grid>
                            <ContentPresenter x:Name="PreviousContentPresentationSite"
                                Content="{x:Null}"
                                ContentTemplate="{x:Null}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter x:Name="CurrentContentPresentationSite"
                                Content="{x:Null}"
                                ContentTemplate="{x:Null}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PresentationStates">
                                <VisualState x:Name="DefaultTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UpTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DownTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="40" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-30" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="30">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.100" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.700" Value="-30">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReplaceTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReplaceTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="40" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Transition" Value="Default" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
</ResourceDictionary>