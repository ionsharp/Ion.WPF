<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:g="http://wpfanimatedgif.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Data="clr-namespace:Ion.Data">
    <Style x:Key="{x:Type i:Thumbnail}" TargetType="{x:Type i:Thumbnail}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type i:Thumbnail}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Border.Resources>
                            <Data:Reference x:Key="Thumbnail" Data="{i:Bind From=TemplatedParent}"/>
                        </Border.Resources>
                        <ContentPresenter x:Name="ContentPresenter">
                            <ContentPresenter.ContentTemplateSelector>
                                <i:KeyTemplateSelector>
                                    <i:KeyTemplateSelector.Default>
                                        <i:KeyTemplate>
                                            <i:ProgressCircle
                                                Height="{Data:Ancestor ActualHeight, i:Thumbnail}"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Width="{Data:Ancestor ActualWidth, i:Thumbnail}"/>
                                        </i:KeyTemplate>
                                    </i:KeyTemplateSelector.Default>
                                    <i:KeyTemplate DataKey="{x:Static i:ThumbnailView.Default}">
                                        <i:ImageElement x:Name="ImageElement"/>
                                        <i:KeyTemplate.Triggers>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="Drive">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{i:Image Key=Drive, Size=Largest}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="File">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{i:Image Key=File, Size=Largest}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="Folder">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{i:Image Key=Folder, Size=Largest}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="Nothing">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{x:Null}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="Root">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{i:Image Key=Folder, Size=Largest}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.PathType, Source={StaticResource Thumbnail}}" Value="Shortcut">
                                                <Setter TargetName="ImageElement" Property="Source" Value="{i:Image Key=File, Size=Largest}"/>
                                            </DataTrigger>
                                        </i:KeyTemplate.Triggers>
                                    </i:KeyTemplate>
                                    <i:KeyTemplate DataKey="{x:Static i:ThumbnailView.Preview}">
                                        <Image x:Name="Image"/>
                                        <i:KeyTemplate.Triggers>
                                            <DataTrigger Binding="{i:Bind Data.IsSourceGif, Source={StaticResource Thumbnail}}" Value="True">
                                                <Setter TargetName="Image" Property="g:ImageBehavior.AnimatedSource" Value="{i:Bind Data.Source, Source={StaticResource Thumbnail}}"/>
                                                <Setter TargetName="Image" Property="g:ImageBehavior.AnimationDuration" Value="0:0:3"/>
                                                <Setter TargetName="Image" Property="g:ImageBehavior.RepeatBehavior" Value="Forever"/>
                                                <Setter TargetName="Image" Property="g:ImageBehavior.AutoStart" Value="True"/>
                                                <Setter TargetName="Image" Property="Source" Value="{x:Null}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Bind Data.IsSourceGif, Source={StaticResource Thumbnail}}" Value="False">
                                                <Setter TargetName="Image" Property="g:ImageBehavior.AnimatedSource" Value="{x:Null}"/>
                                                <Setter TargetName="Image" Property="Source" Value="{i:Bind Data.Source, Source={StaticResource Thumbnail}}"/>
                                            </DataTrigger>
                                        </i:KeyTemplate.Triggers>
                                    </i:KeyTemplate>
                                </i:KeyTemplateSelector>
                            </ContentPresenter.ContentTemplateSelector>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLoading" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsLoading" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Content" Value="{i:Bind From=TemplatedParent, Path=View}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="16"/>
    </Style>
</ResourceDictionary>