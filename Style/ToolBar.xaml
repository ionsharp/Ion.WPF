<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Data="clr-namespace:Ion.Data">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{i:Style Key=ComboBox}"/>
        <ResourceDictionary Source="{i:Style Key=Control}"/>
        <ResourceDictionary Source="{i:Style Key=Separator}"/>
        <ResourceDictionary Source="{i:Style Key=TextBox}"/>
        <ResourceDictionary Source="{i:Style Key=ToggleButton}"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- /// -->
    
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
        TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}"/>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" 
        TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}"/>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" 
        TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}"/>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" 
        TargetType="Separator" BasedOn="{StaticResource {x:Type Separator}}"/>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" 
        TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}"/>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" 
        TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}"/>

    <!-- /// -->
    
    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{i:Theme ToolBarBackground}" />
        <Setter Property="BorderBrush" Value="{i:Theme ToolBarBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}">
                        <DockPanel>
                            <i:ImageButton DockPanel.Dock="Right"
                                ButtonSource="{i:Image Key=TriangleDown}"
                                ButtonVisibility="Visible"
                                ClickMode="Press"
                                IsChecked="{i:Bind From=TemplatedParent, Path=IsOverflowOpen, Mode=TwoWay}"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Visibility="{i:Bind IsEnabled, Convert=Data:ConvertBooleanToVisibility, From=Self}">
                                <Popup x:Name="OverflowPopup"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{i:Bind From=TemplatedParent, Path=IsOverflowOpen}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide"
								    StaysOpen="True">
                                    <i:PopupBorder x:Name="DropDownBorder"
                                        Padding="5">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                            Focusable="True"
                                            FocusVisualStyle="{x:Null}"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            WrapWidth="86"/>
                                    </i:PopupBorder>
                                </Popup>
                            </i:ImageButton>
                            <ToolBarPanel x:Name="PART_ToolBarPanel"
                                IsItemsHost="True"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Standard" />
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{i:Theme ToolBarTrayBackground}" />
    </Style>
</ResourceDictionary>