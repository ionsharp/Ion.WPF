<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Data="clr-namespace:Ion.Data">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{i:Style Key=Control}"/>
        <ResourceDictionary Source="{i:Style Key=TextBox}"/>
        <ResourceDictionary Source="{i:Style Key=UpDown}"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{x:Type i:MatrixControl}" TargetType="{x:Type i:MatrixControl}" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#11000000"/>
                    <GradientStop Offset="1" Color="#22000000"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#33000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="{i:Bind From=Self, Path=Zoom}"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type i:MatrixControl}">
                    <Grid i:XGrid.Columns="*,Auto" i:XGrid.Rows="*,Auto">
                        <Border Grid.Column="0" Grid.Row="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Padding="{TemplateBinding Padding}">
                            <Border.Resources>
                                <Data:Reference x:Key="Matrix" 
                                    Data="{TemplateBinding Matrix}"/>
                                <Data:Reference x:Key="MatrixControl" 
                                    Data="{i:Bind From=TemplatedParent}"/>
                            </Border.Resources>
                            <ItemsControl ItemsSource="{TemplateBinding MatrixValues}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid 
                                            Columns="{i:Bind Data.Columns, Source={StaticResource MatrixControl}}" 
                                            Rows="{i:Bind Data.Rows, Source={StaticResource MatrixControl}}"
                                            SnapsToDevicePixels="True"
                                            UseLayoutRounding="True"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Rectangle Fill="{i:Bind Data.WeightBrush, Source={StaticResource MatrixControl}}"
                                                Opacity="{i:Bind Weight}" 
                                                Visibility="{i:Bind Data.WeightVisibility, Source={StaticResource MatrixControl}}"/>
                                            <ContentPresenter Content="{i:Bind}" ContentTemplate="{i:Bind Data.ValueTemplate, Source={StaticResource MemberControl}}"
                                                ContentTemplateSelector="{i:Bind Data.ValueTemplateSelector, Source={StaticResource MemberControl}}"
                                                Visibility="{i:Bind Data.LabelVisibility, Source={StaticResource MemberControl}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>
                        <StackPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" i:XPanel.Spacing="0,0,0,5" Margin="5,0,0,0" Orientation="Vertical"
                            Visibility="{i:Bind IsEditable, Convert=Data:ConvertBooleanToVisibility, From=TemplatedParent}">
                            <i:ImageButton Command="{i:Bind From=TemplatedParent, Path=RemoveColumnCommand}" Source="{i:Image Key=TriangleLeft}"
                                ToolTip="{i:Text RemoveColumn}"/>
                            <i:ImageButton Command="{i:Bind From=TemplatedParent, Path=AddColumnCommand}" Source="{i:Image Key=TriangleRight}"
                                ToolTip="{i:Text AddColumn}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" i:XPanel.Spacing="0,0,5,0" Margin="0,5,0,0" Orientation="Horizontal"
                            Visibility="{i:Bind IsEditable, Convert=Data:ConvertBooleanToVisibility, From=TemplatedParent}">
                            <i:ImageButton Command="{i:Bind From=TemplatedParent, Path=RemoveRowCommand}" Source="{i:Image Key=TriangleUp}"
                                ToolTip="{i:Text RemoveRow}"/>
                            <i:ImageButton Command="{i:Bind From=TemplatedParent, Path=AddRowCommand}" Source="{i:Image Key=TriangleDown}"
                                ToolTip="{i:Text AddRow}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ValueTemplate">
            <Setter.Value>
                <DataTemplate>
                    <i:DoubleUpDown 
                        CanUpDown="False"
                        IsReadOnly="{i:Bind IsEditable, Convert=Data:Invert, From=FindAncestor, FromType={x:Type i:MatrixControl}}"
                        TextAlignment="Center"
                        Value="{i:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:DoubleUpDown.Style>
                            <Style TargetType="i:DoubleUpDown" BasedOn="{StaticResource {x:Type i:DoubleUpDown}}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </i:DoubleUpDown.Style>
                    </i:DoubleUpDown>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WeightBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#02c307"/>
                    <GradientStop Offset="1" Color="#029000"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="WeightVisibility" Value="Visible"/>
        <Setter Property="Width" Value="{i:Bind From=Self, Path=Zoom}"/>
    </Style>
</ResourceDictionary>