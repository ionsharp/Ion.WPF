<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:Ion.Controls"
    xmlns:Data="clr-namespace:Ion.Data">
    <ControlTemplate x:Key="{x:Static i:XTextBoxBase.ValidationErrorTemplate}">
        <Grid i:XGrid.Rows="Auto,Auto,Auto" i:XGrid.AutoRows="True">
            <Border BorderBrush="#CC333C" BorderThickness="1" CornerRadius="0.7" Padding="1.5" VerticalAlignment="Top" Width="{i:Bind ActualWidth, ElementName=adorner}">
                <AdornedElementPlaceholder x:Name="adorner"/>
            </Border>
            <i:ImageElement x:Name="errorTriangle" Foreground="#CC333C" Opacity="0" Panel.ZIndex="999999" Source="{i:Image Key=SmallTriangle}"/>
            <Border x:Name="errorBorder" 
                Background="#CC333C"
                CornerRadius="1.5"
                Opacity="0" 
                IsHitTestVisible="False"
                MinHeight="24" 
                MaxWidth="540"
                Padding="12,10"
                Panel.ZIndex="999999">
                <Border.Effect>
                    <DropShadowEffect  
                        BlurRadius="4"
                        Color="{i:Theme PopupDropShadow}" 
                        Direction="315"
                        Opacity="0.4"
                        ShadowDepth="2.25"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <i:ImageElement Source="{i:Image Key=XRound}"
                        Foreground="#FFF" 
                        Margin="0,0,10,0"
                        VerticalAlignment="Top"/>
                    <TextBlock Text="{i:Bind ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" TextWrapping="Wrap"/>
                </StackPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{i:Bind AdornedElement.IsKeyboardFocused,ElementName=adorner}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:XTextBoxBase.ValidationMessageTemplate}">
        <Grid i:XGrid.Rows="Auto,Auto,Auto" i:XGrid.AutoRows="True">
            <Border BorderBrush="{i:Theme Key=Blue}" BorderThickness="1" CornerRadius="0.7" Padding="1.5" VerticalAlignment="Top" Width="{i:Bind ActualWidth, ElementName=adorner}">
                <AdornedElementPlaceholder x:Name="adorner"/>
            </Border>
            <i:ImageElement x:Name="errorTriangle" Foreground="{i:Theme Key=Blue}" Opacity="0" Panel.ZIndex="999999" Source="{i:Image Key=SmallTriangle}"/>
            <Border x:Name="errorBorder" 
                Background="{i:Theme Key=Blue}"
                CornerRadius="1.5"
                Opacity="0" 
                IsHitTestVisible="False"
                MinHeight="24" 
                MaxWidth="540"
                Padding="12,10"
                Panel.ZIndex="999999">
                <Border.Effect>
                    <DropShadowEffect  
                        BlurRadius="4"
                        Color="{i:Theme PopupDropShadow}" 
                        Direction="315"
                        Opacity="0.4"
                        ShadowDepth="2.25"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <i:ImageElement Source="{i:Image Key=Message}"
                        Foreground="#FFF" 
                        Margin="0,0,10,0"
                        VerticalAlignment="Top"/>
                    <TextBlock Text="{i:Bind ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" TextWrapping="Wrap"/>
                </StackPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{i:Bind AdornedElement.IsKeyboardFocused,ElementName=adorner}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:XTextBoxBase.ValidationSuccessTemplate}">
        <Grid i:XGrid.Rows="Auto,Auto,Auto" i:XGrid.AutoRows="True">
            <Border BorderBrush="{i:Theme Key=Green}" BorderThickness="1" CornerRadius="0.7" Padding="1.5" VerticalAlignment="Top" Width="{i:Bind ActualWidth, ElementName=adorner}">
                <AdornedElementPlaceholder x:Name="adorner"/>
            </Border>
            <i:ImageElement x:Name="errorTriangle" Foreground="{i:Theme Key=Green}" Opacity="0" Panel.ZIndex="999999" Source="{i:Image Key=SmallTriangle}"/>
            <Border x:Name="errorBorder" 
                Background="{i:Theme Key=Green}"
                CornerRadius="1.5"
                Opacity="0" 
                IsHitTestVisible="False"
                MinHeight="24" 
                MaxWidth="540"
                Padding="12,10"
                Panel.ZIndex="999999">
                <Border.Effect>
                    <DropShadowEffect  
                        BlurRadius="4"
                        Color="{i:Theme PopupDropShadow}" 
                        Direction="315"
                        Opacity="0.4"
                        ShadowDepth="2.25"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <i:ImageElement Source="{i:Image Key=Success}"
                        Foreground="#FFF" 
                        Margin="0,0,10,0"
                        VerticalAlignment="Top"/>
                    <TextBlock Text="{i:Bind ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" TextWrapping="Wrap"/>
                </StackPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{i:Bind AdornedElement.IsKeyboardFocused,ElementName=adorner}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:XTextBoxBase.ValidationWarningTemplate}">
        <Grid i:XGrid.Rows="Auto,Auto,Auto" i:XGrid.AutoRows="True">
            <Border BorderBrush="{i:Theme Key=Orange}" BorderThickness="1" CornerRadius="0.7" Padding="1.5" VerticalAlignment="Top" Width="{i:Bind ActualWidth, ElementName=adorner}">
                <AdornedElementPlaceholder x:Name="adorner"/>
            </Border>
            <i:ImageElement x:Name="errorTriangle" Foreground="{i:Theme Key=Orange}" Opacity="0" Panel.ZIndex="999999" Source="{i:Image Key=SmallTriangle}"/>
            <Border x:Name="errorBorder" 
                Background="{i:Theme Key=Orange}"
                CornerRadius="1.5"
                Opacity="0" 
                IsHitTestVisible="False"
                MinHeight="24" 
                MaxWidth="540"
                Padding="12,10"
                Panel.ZIndex="999999">
                <Border.Effect>
                    <DropShadowEffect  
                        BlurRadius="4"
                        Color="{i:Theme PopupDropShadow}" 
                        Direction="315"
                        Opacity="0.4"
                        ShadowDepth="2.25"/>
                </Border.Effect>
                <StackPanel Orientation="Horizontal">
                    <i:ImageElement Source="{i:Image Key=Warning}"
                        Foreground="#FFF" 
                        Margin="0,0,10,0"
                        VerticalAlignment="Top"/>
                    <TextBlock Text="{i:Bind ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" TextWrapping="Wrap"/>
                </StackPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{i:Bind AdornedElement.IsKeyboardFocused,ElementName=adorner}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <DoubleAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <ThicknessAnimation Duration="00:00:00.15"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Margin"
                                FillBehavior="HoldEnd"
                                From="1,0,0,0"
                                To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                            <DoubleAnimation Duration="00:00:00"
                                Storyboard.TargetName="errorTriangle"
                                Storyboard.TargetProperty="Opacity"
                                To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{x:Static i:XTextBoxBase.ValidationIconTemplate}">
        <ContentPresenter x:Name="Content" Content="{i:String Key=Empty}"
            Visibility="{Data:Ancestor {x:Type TextBoxBase}, Path=(i:XTextBoxBase.ValidationIconVisibility)}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(Validation.HasError)}" Value="True">
                <Setter TargetName="Content" Property="ContentTemplate" Value="{Data:Ancestor {x:Type TextBoxBase}, Path=(i:XTextBoxBase.ValidationIconErrorTemplate)}"/>
            </DataTrigger>
            <DataTrigger Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(Validation.HasError)}" Value="False">
                <Setter TargetName="Content" Property="ContentTemplate" Value="{Data:Ancestor {x:Type TextBoxBase}, Path=(i:XTextBoxBase.ValidationIconSuccessTemplate)}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(Validation.HasError)}" Value="False"/>
                    <Condition Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(i:XTextBoxBase.ValidationIconSuccessVisibility)}" Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Content" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(Validation.HasError)}" Value="False"/>
                    <Condition Binding="{Data:Ancestor {x:Type TextBoxBase}, Path=(i:XTextBoxBase.ValidationIconSuccessVisibility)}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>